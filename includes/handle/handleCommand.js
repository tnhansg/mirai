const _0x346673 = _0x30ae;
(function (_0x93a0x2, _0x93a0x3) {
    const _0x93a0x4 = _0x30ae,
        _0x93a0x5 = _0x93a0x2();
    while (!![]) {
        try {
            const _0x93a0x6 = parseInt(_0x93a0x4(0x94)) / 0x1 + -parseInt(_0x93a0x4(0xa7)) / 0x2 * (-parseInt(_0x93a0x4(0x7b)) / 0x3) + -parseInt(_0x93a0x4(0x7c)) / 0x4 * (parseInt(_0x93a0x4(0x85)) / 0x5) + parseInt(_0x93a0x4(0x80)) / 0x6 * (parseInt(_0x93a0x4(0xd3)) / 0x7) + -parseInt(_0x93a0x4(0xbc)) / 0x8 * (-parseInt(_0x93a0x4(0xb5)) / 0x9) + parseInt(_0x93a0x4(0xc4)) / 0xa + -parseInt(_0x93a0x4(0xab)) / 0xb;
            if (_0x93a0x6 === _0x93a0x3) {
                break
            } else {
                _0x93a0x5.push(_0x93a0x5.shift())
            }
        } catch (_0x456990) {
            _0x93a0x5.push(_0x93a0x5.shift())
        }
    }
}(_0x777b, 0xa1ddb), module[_0x346673(0xac)] = function ({
    api: _0x2f7a9a,
    models: _0x28729b,
    Users: _0x4ed100,
    Threads: _0x573ded,
    Currencies: _0x4315fd
}) {
    const _0x93a0x7 = _0x346673,
        _0x93a0x8 = require('fs'),
        _0x93a0x9 = require(_0x93a0x7(0xd2)),
        _0x93a0xa = (_0x93a0xe) => {
            return _0x93a0xe[_0x93a0x7(0x8e)](/[.*+?^${}()|[\]\\]/g, _0x93a0x7(0xbf))
        },
        _0x93a0xb = require(_0x93a0x7(0xc5)),
        _0x93a0xc = require('axios'),
        _0x93a0xd = require('moment-timezone');
    return async function ({
        event: _0x587db5
    }) {
        const _0x93a0xf = _0x93a0x7,
            _0x93a0x10 = Date[_0x93a0xf(0x79)](),
            _0x93a0x11 = _0x93a0xd.tz(_0x93a0xf(0x88))[_0x93a0xf(0x9d)](_0x93a0xf(0x8f)),
            {
                allowInbox: _0x1f50b7,
                PREFIX: _0xbe8e2b,
                ADMINBOT: _0x1d2023,
                NDH: _0x4d8ff8,
                DeveloperMode: _0x4f78cf,
                adminOnly: _0x193b05,
                keyAdminOnly: _0x465dcc,
                ndhOnly: _0xb1c486,
                adminPaseOnly: _0x4a8b9a
            } = global[_0x93a0xf(0xd7)],
            {
                userBanned: _0x1188aa,
                threadBanned: _0x12dacb,
                threadInfo: _0x527574,
                threadData: _0x5bd7d4,
                commandBanned: _0x47f1f8
            } = global.data,
            {
                commands: _0x3a292d,
                cooldowns: _0x1a774b
            } = global[_0x93a0xf(0xba)];
        var {
            body: _0x5bf423,
            senderID: _0x93a0x12,
            threadID: _0x93a0x13,
            messageID: _0x458f50
        } = _0x587db5, _0x93a0x12 = String(_0x93a0x12), _0x93a0x13 = String(_0x93a0x13);
        const _0x93a0x14 = _0x5bd7d4.get(_0x93a0x13) || {},
            _0x93a0x15 = new RegExp(_0x93a0xf(0xa4) + _0x93a0x12 + '>|' + _0x93a0xa(_0x93a0x14[_0x93a0xf(0x7d)]('PREFIX') ? _0x93a0x14[_0x93a0xf(0xbb)] : _0xbe8e2b) + ')\\s*');
        if (!_0x93a0x15[_0x93a0xf(0x86)](_0x5bf423)) {
            return
        };
        const _0x93a0x16 = require(_0x93a0xf(0xb9));
        let _0x93a0x17 = _0x93a0xd.tz(_0x93a0xf(0xa0))[_0x93a0xf(0x99)](),
            _0x93a0x18 = __dirname + '/usages.json';
        if (!_0x93a0x8[_0x93a0xf(0x8a)](_0x93a0x18)) {
            _0x93a0x8[_0x93a0xf(0x84)](_0x93a0x18, JSON.stringify({}))
        };
        let _0x93a0x19 = JSON[_0x93a0xf(0x9b)](_0x93a0x8[_0x93a0xf(0xb8)](_0x93a0x18));
        !(_0x93a0x12 in _0x93a0x19) && (_0x93a0x19[_0x93a0x12] = {}, _0x93a0x19[_0x93a0x12][_0x93a0xf(0xaa)] = 0x1e, _0x93a0x19[_0x93a0x12][_0x93a0xf(0xc1)] = 0x0);;;
        if (!global[_0x93a0xf(0xa3)].allThreadID[_0x93a0xf(0x87)](_0x93a0x13) && !_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12) && _0x93a0x16[_0x93a0xf(0xd8)] == !![]) {
            return _0x2f7a9a.sendMessage(_0x93a0xf(0xb6), _0x93a0x13, _0x458f50)
        };
        if (!_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12) && _0x93a0x16[_0x93a0xf(0xce)] == !![]) {
            if (!_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12) && _0x93a0x16.adminOnly == !![]) {
                return _0x2f7a9a.sendMessage(_0x93a0xf(0x96), _0x93a0x13, _0x458f50)
            }
        };
        if (!_0x4d8ff8[_0x93a0xf(0x87)](_0x93a0x12) && !_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12) && _0x93a0x16[_0x93a0xf(0x83)] == !![]) {
            return _0x2f7a9a[_0x93a0xf(0xc0)](_0x93a0xf(0xcb), _0x93a0x13, _0x458f50)
        };
        const _0x93a0x1a = require(_0x93a0xf(0xc6));
        var _0x93a0x1b = _0x527574[_0x93a0xf(0x97)](_0x93a0x13) || await _0x573ded[_0x93a0xf(0xcf)](_0x93a0x13);
        const _0x93a0x1c = _0x93a0x1b.adminIDs[_0x93a0xf(0x9a)]((_0x93a0x1d) => {
            return _0x93a0x1d.id == _0x93a0x12
        });
        if (_0x93a0x1a[_0x93a0xf(0xc9)].hasOwnProperty(_0x93a0x13) && _0x93a0x1a[_0x93a0xf(0xc9)][_0x93a0x13] == !![] && !_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12) && !_0x93a0x1c && _0x587db5[_0x93a0xf(0xc2)] == !![] && !_0x4d8ff8.includes(_0x93a0x12) && !_0x93a0x1c && _0x587db5.isGroup == !![]) {
            return _0x2f7a9a[_0x93a0xf(0xc0)](`[🐧] 𝗠𝗜𝗥𝗔𝗜 [🐧]\
[🐧] → Hiện tại đang kích hoạt chế độ Quản Trị Viên, chỉ Quản Trị Viên được sử dụng Bot`, _0x587db5.threadID, _0x587db5[_0x93a0xf(0xa9)])
        };
        if (_0x1188aa[_0x93a0xf(0x82)](_0x93a0x12) || _0x12dacb[_0x93a0xf(0x82)](_0x93a0x13) || _0x1f50b7 == ![] && _0x93a0x12 == _0x93a0x13) {
            if (!_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12[_0x93a0xf(0xb3)]()) && !_0x4d8ff8[_0x93a0xf(0x87)](_0x93a0x12[_0x93a0xf(0xb3)]())) {
                if (_0x1188aa[_0x93a0xf(0x82)](_0x93a0x12)) {
                    const {
                        reason: _0x515112,
                        dateAdded: _0x2c541b
                    } = _0x1188aa[_0x93a0xf(0x97)](_0x93a0x12) || {};
                    return _0x2f7a9a[_0x93a0xf(0xc0)](global[_0x93a0xf(0xaf)](_0x93a0xf(0x89), _0x93a0xf(0xd6), _0x515112, _0x2c541b), _0x93a0x13, async (_0x93a0x1e, _0x93a0x1f) => {
                        const _0x93a0x20 = _0x93a0xf;
                        return await new Promise((_0x93a0x21) => {
                            return setTimeout(_0x93a0x21, 0x5 * 0x3e8)
                        }), _0x2f7a9a[_0x93a0x20(0x9f)](_0x93a0x1f.messageID)
                    }, _0x458f50)
                } else {
                    if (_0x12dacb[_0x93a0xf(0x82)](_0x93a0x13)) {
                        const {
                            reason: _0x596686,
                            dateAdded: _0x43a34d
                        } = _0x12dacb.get(_0x93a0x13) || {};
                        return _0x2f7a9a[_0x93a0xf(0xc0)](global.getText(_0x93a0xf(0x89), 'threadBanned', _0x596686, _0x43a34d), _0x93a0x13, async (_0x93a0x22, _0x93a0x23) => {
                            const _0x93a0x24 = _0x93a0xf;
                            return await new Promise((_0x93a0x25) => {
                                return setTimeout(_0x93a0x25, 0x5 * 0x3e8)
                            }), _0x2f7a9a[_0x93a0x24(0x9f)](_0x93a0x23[_0x93a0x24(0xa9)])
                        }, _0x458f50)
                    }
                }
            }
        };
        const [_0xd88f77] = _0x5bf423[_0x93a0xf(0xda)](_0x93a0x15), _0x93a0x26 = _0x5bf423[_0x93a0xf(0x7e)](_0xd88f77[_0x93a0xf(0x9c)])[_0x93a0xf(0x93)]().split(/ +/);
        commandName = _0x93a0x26[_0x93a0xf(0x90)]()[_0x93a0xf(0xb1)]();
        var _0x93a0x27 = _0x3a292d[_0x93a0xf(0x97)](commandName);
        _0x93a0x8[_0x93a0xf(0x84)](_0x93a0x18, JSON[_0x93a0xf(0xd0)](_0x93a0x19, null, 0x4));
        if (!_0x93a0x27) {
            var _0x93a0x28 = [];
            const _0x93a0x29 = _0x3a292d[_0x93a0xf(0x92)]();
            for (const _0x93a0x2a of _0x93a0x29) {
                _0x93a0x28[_0x93a0xf(0x78)](_0x93a0x2a)
            };
            const _0x93a0x2b = _0x93a0x9[_0x93a0xf(0x7a)](commandName, _0x93a0x28);
            if (_0x93a0x2b[_0x93a0xf(0x91)].rating >= 0.5) {
                _0x93a0x27 = client[_0x93a0xf(0x95)][_0x93a0xf(0x97)](_0x93a0x2b.bestMatch[_0x93a0xf(0xd4)])
            } else {
                return _0x2f7a9a[_0x93a0xf(0xc0)](global[_0x93a0xf(0xaf)](_0x93a0xf(0x89), _0x93a0xf(0x81), _0x93a0x2b[_0x93a0xf(0x91)][_0x93a0xf(0xd4)]), _0x93a0x13)
            }
        };
        if (_0x47f1f8[_0x93a0xf(0x97)](_0x93a0x13) || _0x47f1f8[_0x93a0xf(0x97)](_0x93a0x12)) {
            if (!_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12)) {
                const _0x93a0x2c = _0x47f1f8[_0x93a0xf(0x97)](_0x93a0x13) || [],
                    _0x93a0x2d = _0x47f1f8[_0x93a0xf(0x97)](_0x93a0x12) || [];
                if (_0x93a0x2c[_0x93a0xf(0x87)](_0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xa2)])) {
                    return _0x2f7a9a[_0x93a0xf(0xc0)](global[_0x93a0xf(0xaf)](_0x93a0xf(0x89), 'commandThreadBanned', _0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xa2)]), _0x93a0x13, async (_0x93a0x2e, _0x93a0x2f) => {
                        const _0x93a0x30 = _0x93a0xf;
                        return await new Promise((_0x93a0x31) => {
                            return setTimeout(_0x93a0x31, 0x5 * 0x3e8)
                        }), _0x2f7a9a[_0x93a0x30(0x9f)](_0x93a0x2f[_0x93a0x30(0xa9)])
                    }, _0x458f50)
                };
                if (_0x93a0x2d[_0x93a0xf(0x87)](_0x93a0x27.config[_0x93a0xf(0xa2)])) {
                    return _0x2f7a9a[_0x93a0xf(0xc0)](global[_0x93a0xf(0xaf)](_0x93a0xf(0x89), _0x93a0xf(0x9e), _0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xa2)]), _0x93a0x13, async (_0x93a0x32, _0x93a0x33) => {
                        const _0x93a0x34 = _0x93a0xf;
                        return await new Promise((_0x93a0x35) => {
                            return setTimeout(_0x93a0x35, 0x5 * 0x3e8)
                        }), _0x2f7a9a[_0x93a0x34(0x9f)](_0x93a0x33.messageID)
                    }, _0x458f50)
                }
            }
        };
        if (_0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xa1)].toLowerCase() == 'nsfw' && !global[_0x93a0xf(0xa3)][_0x93a0xf(0xa6)].includes(_0x93a0x13) && !_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12)) {
            return _0x2f7a9a[_0x93a0xf(0xc0)](global[_0x93a0xf(0xaf)](_0x93a0xf(0x89), _0x93a0xf(0xca)), _0x93a0x13, async (_0x93a0x36, _0x93a0x37) => {
                const _0x93a0x38 = _0x93a0xf;
                return await new Promise((_0x93a0x39) => {
                    return setTimeout(_0x93a0x39, 0x5 * 0x3e8)
                }), _0x2f7a9a[_0x93a0x38(0x9f)](_0x93a0x37[_0x93a0x38(0xa9)])
            }, _0x458f50)
        };
        var _0x93a0x3a;
        if (_0x587db5[_0x93a0xf(0xc2)] == !![]) {
            try {
                _0x93a0x3a = _0x527574.get(_0x93a0x13) || await _0x573ded.getInfo(_0x93a0x13);
                if (Object.keys(_0x93a0x3a).length == 0x0) {
                    throw new Error()
                }
            } catch (_0x22c6dd) {
                _0x93a0xb(global[_0x93a0xf(0xaf)](_0x93a0xf(0x89), 'cantGetInfoThread', _0x93a0xf(0x8d)))
            }
        };
        var _0x93a0x3b = 0x0,
            _0x93a0x3c = _0x527574[_0x93a0xf(0x97)](_0x93a0x13) || await _0x573ded.getInfo(_0x93a0x13);
        const _0x93a0x3d = _0x93a0x3c[_0x93a0xf(0xc7)][_0x93a0xf(0x9a)]((_0x93a0x3e) => {
            return _0x93a0x3e.id == _0x93a0x12
        });
        if (_0x1d2023.includes(_0x93a0x12[_0x93a0xf(0xb3)]())) {
            _0x93a0x3b = 0x3
        } else {
            if (_0x4d8ff8[_0x93a0xf(0x87)](_0x93a0x12[_0x93a0xf(0xb3)]())) {
                _0x93a0x3b = 0x2
            } else {
                if (!_0x1d2023[_0x93a0xf(0x87)](_0x93a0x12) && _0x93a0x3d) {
                    _0x93a0x3b = 0x1
                }
            }
        };
        var _0x93a0x3f = '';
        if (_0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xc3)] == 0x1) {
            _0x93a0x3f = 'Quản Trị Viên'
        } else {
            if (_0x93a0x27[_0x93a0xf(0xd7)].hasPermssion == 0x2) {
                _0x93a0x3f = _0x93a0xf(0xcc)
            } else {
                _0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xc3)] == 0x3 && (_0x93a0x3f = _0x93a0xf(0xb0))
            }
        };
        if (_0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xc3)] > _0x93a0x3b) {
            return _0x2f7a9a[_0x93a0xf(0xc0)]('[🐧] → Lệnh ' + _0x93a0x27[_0x93a0xf(0xd7)].name + ' chỉ được dùng với những người có quyền hạn là ' + _0x93a0x3f, _0x587db5[_0x93a0xf(0x8b)], _0x587db5[_0x93a0xf(0xa9)])
        };
        if (!client[_0x93a0xf(0x98)][_0x93a0xf(0x82)](_0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xa2)])) {
            client.cooldowns[_0x93a0xf(0xb7)](_0x93a0x27[_0x93a0xf(0xd7)][_0x93a0xf(0xa2)], new Map())
        };
        const _0x93a0x40 = client.cooldowns[_0x93a0xf(0x97)](_0x93a0x27.config[_0x93a0xf(0xa2)]);;;
        const _0x93a0x41 = (_0x93a0x27[_0x93a0xf(0xd7)].cooldowns || 0x1) * 0x3e8;
        if (_0x93a0x40.has(_0x93a0x12) && _0x93a0x10 < _0x93a0x40[_0x93a0xf(0x97)](_0x93a0x12) + _0x93a0x41) {
            return _0x2f7a9a.sendMessage(_0x93a0xf(0xbe) + ((_0x93a0x40[_0x93a0xf(0x97)](_0x93a0x12) + _0x93a0x41 - _0x93a0x10) / 0x3e8).toString()[_0x93a0xf(0x7e)](0x0, 0x5) + _0x93a0xf(0xd9), _0x93a0x13, _0x458f50)
        };
        var _0x93a0x42;
        if (_0x93a0x27[_0x93a0xf(0xad)] && typeof _0x93a0x27[_0x93a0xf(0xad)] == _0x93a0xf(0xc8) && _0x93a0x27[_0x93a0xf(0xad)][_0x93a0xf(0x7d)](global[_0x93a0xf(0xd7)].language)) {
            _0x93a0x42 = (..._0x93a0x43) => {
                const _0x93a0x44 = _0x93a0xf;
                var _0x93a0x45 = _0x93a0x27[_0x93a0x44(0xad)][global[_0x93a0x44(0xd7)][_0x93a0x44(0xa8)]][_0x93a0x43[0x0]] || '';
                for (var _0x93a0x46 = _0x93a0x43[_0x93a0x44(0x9c)]; _0x93a0x46 > 0x2533 + 0x1105 + -0x3638; _0x93a0x46--) {
                    const _0x93a0x47 = RegExp('%' + _0x93a0x46, 'g');
                    _0x93a0x45 = _0x93a0x45[_0x93a0x44(0x8e)](_0x93a0x47, _0x93a0x43[_0x93a0x46])
                };
                return _0x93a0x45
            }
        } else {
            _0x93a0x42 = () => {}
        };
        try {
            const _0x93a0x48 = {};
            _0x93a0x48[_0x93a0xf(0xb2)] = _0x2f7a9a, _0x93a0x48[_0x93a0xf(0x7f)] = _0x587db5, _0x93a0x48.args = _0x93a0x26, _0x93a0x48[_0x93a0xf(0xb4)] = _0x28729b, _0x93a0x48.Users = _0x4ed100, _0x93a0x48[_0x93a0xf(0xa5)] = _0x573ded, _0x93a0x48[_0x93a0xf(0xbd)] = _0x4315fd, _0x93a0x48.permssion = _0x93a0x3b, _0x93a0x48.getText = _0x93a0x42, _0x93a0x27[_0x93a0xf(0xae)](_0x93a0x48), _0x93a0x40[_0x93a0xf(0xb7)](_0x93a0x12, _0x93a0x10);
            if (_0x4f78cf == !![]) {
                _0x93a0xb(global.getText('handleCommand', _0x93a0xf(0xd5), _0x93a0x11, commandName, _0x93a0x12, _0x93a0x13, _0x93a0x26[_0x93a0xf(0x8c)](' '), Date[_0x93a0xf(0x79)]() - _0x93a0x10), _0x93a0xf(0xd1))
            };
            return
        } catch (_0x483b3e) {
            return _0x2f7a9a[_0x93a0xf(0xc0)](global[_0x93a0xf(0xaf)]('handleCommand', _0x93a0xf(0xcd), commandName, _0x483b3e), _0x93a0x13)
        }
    }
});
function _0x30ae(_0x93a0x4a, _0x93a0x4b) {
    const _0x93a0x4c = _0x777b();
    return _0x30ae = function (_0x93a0x4d, _0x93a0x4e) {
        _0x93a0x4d = _0x93a0x4d - 0x78;
        let _0x93a0x4f = _0x93a0x4c[_0x93a0x4d];
        return _0x93a0x4f
    }, _0x30ae(_0x93a0x4a, _0x93a0x4b)
}
function _0x777b() {
    const _0x93a0x51 = ['parse', 'length', 'format', 'commandUserBanned', 'unsendMessage', 'Asia/Ho_Chi_Minh', 'commandCategory', 'name', 'data', '^(<@!?', 'Threads', 'threadAllowNSFW', '2207208PrAfLz', 'language', 'messageID', 'usages', '16826051jrwZxC', 'exports', 'languages', 'run', 'getText', 'ADMINBOT', 'toLowerCase', 'api', 'toString', 'models', '543771ZqMRNr', `[🐧] 𝗠𝗜𝗥𝗔𝗜 [🐧]\
[ 𝐌𝐎𝐃𝐄 ] → Chỉ Admin Bot mới được sử dụng bot trong chat riêng.`, 'set', 'readFileSync', './../../config.json', 'client', 'PREFIX', '24KKyVfc', 'Currencies', `[ 𝐌𝐎𝐃𝐄 ] Bạn đang trong thời gian chờ ⏳\nVui lòng thử lại sau `, '\\$&', 'sendMessage', 'diemdanh', 'isGroup', 'hasPermssion', '8924730tJtYMV', '../../utils/log.js', './../../modules/commands/cache/data.json', 'adminIDs', 'object', 'adminbox', 'threadNotAllowNSFW', `[🐧]  𝗠𝗜𝗥𝗔𝗜 [🐧]\
[ 𝐌𝐎𝐃𝐄 ] → Chỉ Support Bot mới có thể sử dụng bot`, 'Người Điều Hành hoặc Admin Bot', 'commandError', 'adminOnly', 'getInfo', 'stringify', 'MODE', 'string-similarity', '13223rfjTvH', 'target', 'executeCommand', 'userBanned', 'config', 'adminPaseOnly', 's nữa nhé 👻', 'match', 'push', 'now', 'findBestMatch', '3TgKZCn', '389412JJoZie', 'hasOwnProperty', 'slice', 'event', '762VEqSTA', 'commandNotExist', 'has', 'ndhOnly', 'writeFileSync', '35iZAPMJ', 'test', 'includes', 'Asia/Ho_Chi_minh', 'handleCommand', 'existsSync', 'threadID', 'join', 'error', 'replace', 'HH:MM:ss DD/MM/YYYY', 'shift', 'bestMatch', 'keys', 'trim', '456878xrvRUt', 'commands', `[🐧] 𝗠𝗜𝗥𝗔𝗜 [🐧]\
[ 𝐌𝐎𝐃𝐄 ] → Chỉ Admin Bot mới có thể sử dụng bot`, 'get', 'cooldowns', 'day', 'find'];
    _0x777b = function () {
        return _0x93a0x51
    };
    return _0x777b()
}